{
    "$schema": "http://json-schema.org/schema#",
    "type": "object",
    "required": ["common"],
    "additionalProperties": false,
    "properties": {
        "$schema": {
            "description": "JSON schema for validation",
            "type": "string"
        },
        "common": {
            "required": ["name", "version", "platform", "titleLang", "news", "desc"],
            "additionalProperties": false,
            "description": "Contains all common instance attributes",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the adapter without ioBroker",
                    "type": "string",
                    "pattern": "(?i)^(?!iobroker)"
                },
                "version": {
                    "description": "Current adapter version",
                    "type": "string",
                    "pattern": "^\\d+\\.\\d+\\.\\d+.*"
                },
                "platform": {
                    "description": "Platform, normally Javascript/Node.js",
                    "type": "string"
                },
                "title": {
                    "description": "[DEPRECATED] Longer name of adapter to show in admin",
                    "type": "string"
                },
                "titleLang": {
                    "description": "Longer name of adapter in all supported languages like {en: 'Adapter', de: 'adapter', ru: 'Драйвер'}",
                    "type": "object",
                    "patternProperties": {
                        "en|de|ru|pt|nl|fr|it|es|pl|zh-cn": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "news": {
                    "description": "Short form of changelog in all supported languages",
                    "type": "object",
                    "minProperties": 1,
                    "maxProperties": 20,
                    "patternProperties": {
                        "^\\d+\\.\\d+\\.\\d+.*": {
                            "type": "object",
                            "patternProperties": {
                                "en|de|ru|pt|nl|fr|it|es|pl|zh-cn": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        }
                     },
                    "additionalProperties": false
                },
                "desc": {
                    "description": "Description, object for multilingual description",
                    "type": "object",
                    "patternProperties": {
                        "en|de|ru|pt|nl|fr|it|es|pl|zh-cn": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "messagebox": {
                    "description": "true if messagebox supported. If yes, the object system.adapter.<instance>.messagebox will be created to send messages to adapter",
                    "type": "boolean"
                },
                "readme": {
                    "description": "[DEPRECATED]: Use docs",
                    "type": "string"
                },
                "docs": {
                    "description": "The structure like {\"en\": \"docs/en/README.md\", \"de\": [\"docs/de/README.md\", \"docs/de/README1.md\"]} that describes the documentation if not in README.md",
                    "type": "object",
                    "patternProperties": {
                        "en|de|ru|pt|nl|fr|it|es|pl|zh-cn": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "authors": {
                    "description": "Array of authors as string",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "license": {
                    "description": "License of the software",
                    "type": "string"
                },
                "type": {
                    "description": "Type of the adapter",
                    "type": "string",
                    "pattern": "alarm|climate-control|communication|date-and-time|energy|metering|garden|general|geoposition|hardware|health|household|infrastructure|iot-systems|lighting|logic|messaging|misc-data|multimedia|network|protocols|storage|utility|visualization|visualization-icons|visualization-widgets|weather"
                },
                "unsafePerm": {
                    "description": "if the package must be installed with \"npm --unsafe-perm\" parameter",
                    "type": "boolean"
                },
                "plugins": {
                    "description": "ioBroker plugins to be used",
                    "type": "object"
                },
                "adminColumns": {
                    "description": "Custom attributes, that must be shown in admin in the object browser. Like: [{\"name\": {\"en\": \"KNX address\"}, \"path\": \"native.address\", \"width\": 100, \"align\": \"left\"}, {\"name\": \"DPT\", \"path\": \"native.dpt\", \"width\": 100, \"align\": \"right\", \"type\": \"number\", \"edit\": true, \"objTypes\": [\"state\", \"channel\"]}]. type is a type of the attribute (e.g. string, number, boolean) and only needed if edit is enabled. objTypes is a list of the object types, that could have such attribute. Used only in edit mode too.",
                    "type": "array"
                },
                "adminTab": {
                    "description": "Adds a Tab which can be shown in admin adapter",
                    "type": "object",
                    "required": ["fa-icon", "link", "name"],
                    "additionalProperties": false,
                    "properties": {
                        "fa-icon": {
                            "description": "Font-Awesome icon name for TAB",
                            "type": "string"
                        },
                        "ignoreConfigUpdate": {
                            "description": "Do not update config TAB if configuration changed (to enable configure settings in TAB)",
                            "type": "boolean"
                        },
                        "link": {
                            "description": "Link for iframe in the TAB. You can use parameters replacement like this: \"http://%ip%:%port%\". IP will be replaced with host IP. \"port\" will be extracted from native.port.",
                            "type": "string"
                        },
                        "name": {
                            "description": "Name of TAB (multilingual object) in admin",
                            "type": "object",
                            "patternProperties": {
                                "en|de|ru|pt|nl|fr|it|es|pl|zh-cn": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false
                        },
                        "singleton": {
                            "description": "If true, only one TAB for all instances will be shown.",
                            "type": "boolean"
                        }
                    }
                },
                "controller": {
                    "description": "Only used by js-controller",
                    "type": "boolean"
                },
                "allowInit": {
                    "description": "allow for \"scheduled\" adapter to be called \"not in the time schedule\", if settings changed or adapter started. Or allow scheduled adapter start once after configuration changed and then by schedule.",
                    "type": "boolean"
                },
                "availableModes": {
                    "description": "values for common.mode if more than one mode is possible",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blockly": {
                    "description": "if adapter has custom blocks for blockly (admin/blockly.js required)",
                    "type": "boolean"
                },
                "connectionType": {
                    "description": "Type of connection to device",
                    "type": "string",
                    "pattern": "local|cloud"
                },
                "compact": {
                    "description": "If compact mode supported",
                    "type": "boolean"
                },
                "dataFolder": {
                    "description": "Folder relative to iobroker-data where the adapter stores the data. This folder will be backed up and restored automatically. You can use variable '%INSTANCE%' in it",
                    "type": "string"
                }
            }
        },
        "objects": {
            "description": "Objects which will be created for the adapter",
            "type": "array",
            "items": {
                "type": "object"
            }
        },
        "instanceObjects": {
            "description": "Objects which will be created for each instance",
            "type": "array",
            "items": {
                "type": "object"
            }
        },
        "notifications": {
            "description": "Register notifications for the built-in notification system",
            "type": "array",
            "items": {
                "type": "object"
            }
        },
        "native": {
            "description": "Predefined attributes which are accessible in index_m.html and at runtime via adapter.config.<attribute>, e.g. {\"port\": 1234, \"password\": \"secret\"}",
            "type": "object"
        },
        "protectedNative": {
            "description": "Array of config attributes which will only be accessible by the own adapter, e.g. [\"password\"]",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "encryptedNative": {
            "description": "Array of config attributes which will be automatically encrypted when stored via Admin configuration page and automatically decrypted at adapter runtime, e.g. [\"password\", \"token\"]",
            "type": "array",
            "items": {
                "type": "string"
            }
        }
    }
}
